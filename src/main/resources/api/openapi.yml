openapi: 3.0.2
info:
  title: Cena - Menu generation
  version: '1'
  description: Cena provides a REST API for menu generation
  contact:
    name: Alexandre Carbenay
  license:
    name: GNU GENERAL PUBLIC LICENSE
    url: 'http://www.gnu.org/licenses/'
servers:
  - description: Production server
    url: 'https://cena.adhuc.org/api'
paths:
  /:
    get:
      summary: Retrieve the API index. This is the main entry point to navigate to the main API resources
      operationId: index
      tags:
        - Index
      responses:
        200:
          $ref: '#/components/responses/Index'
  /ingredients:
    get:
      summary: Get the ingredients collection. Ingredients collection is accessible for every user, either authenticated or not
      operationId: listIngredients
      tags:
        - Ingredients
      responses:
        200:
          $ref: '#/components/responses/Ingredients'
    post:
      summary: Create an ingredient in ingredients collection. The specified ingredient name must not already be used by an existing ingredient. Only an ingredient manager can create ingredients
      operationId: createIngredient
      tags:
        - Ingredients
      security:
        - basicAuth:[]
      requestBody:
        $ref: '#/components/requestBodies/CreateIngredient'
      responses:
        201:
          $ref: '#/components/responses/IngredientCreated'
        400:
          $ref: '#/components/responses/400-BadRequest'
        401:
          $ref: '#/components/responses/401-Unauthorized'
        403:
          $ref: '#/components/responses/403-Forbidden'
    delete:
      summary: Delete all ingredients from the system. Only a super administrator can delete all ingredients directly. An ingredient manager can delete specific ingredients through the corresponding ingredient resource.
      operationId: deleteIngredients
      tags:
        - Ingredients
      security:
        - basicAuth:[]
      responses:
        204:
          description: All ingredients have been deleted from the system
        401:
          $ref: '#/components/responses/401-Unauthorized'
        403:
          $ref: '#/components/responses/403-Forbidden'
  /ingredients/{ingredientId}:
    get:
      summary: Get an ingredient detail. Ingredient detail is accessible for every user, either authenticated or not
      operationId: retrieveIngredient
      tags:
        - Ingredients
      parameters:
        - $ref: '#/components/parameters/ingredientId'
      responses:
        200:
          $ref: '#/components/responses/Ingredient'
        404:
          $ref: '#/components/responses/404-NotFound'
    delete:
      summary: Delete an ingredient from the system. Only an ingredient manager or super administrator can delete an ingredient
      operationId: deleteIngredient
      tags:
        - Ingredients
      security:
        - basicAuth:[]
      parameters:
        - $ref: '#/components/parameters/ingredientId'
      responses:
        204:
          description: The ingredient has been deleted from the system
        401:
          $ref: '#/components/responses/401-Unauthorized'
        403:
          $ref: '#/components/responses/403-Forbidden'
        404:
          $ref: '#/components/responses/404-NotFound'
  /recipes:
    get:
      summary: Get the recipes collection. Recipes collection is accessible for every user, either authenticated or not
      operationId: listRecipes
      tags:
        - Recipes
      parameters:
        - in: query
          name: filter[ingredient]
          schema:
            $ref: '#/components/schemas/IngredientId'
          description: The ingredient identity to filter recipes list on, resulting in a list of recipes composed of the specified ingredient
      responses:
        200:
          $ref: '#/components/responses/Recipes'
    post:
      summary: Create a recipe in recipes collection. Only an authenticated user can create recipes. The user that creates a recipe is called a recipe author
      operationId: createRecipe
      tags:
        - Recipes
      security:
        - basicAuth:[]
      requestBody:
        $ref: '#/components/requestBodies/CreateRecipe'
      responses:
        201:
          $ref: '#/components/responses/RecipeCreated'
        400:
          $ref: '#/components/responses/400-BadRequest'
        401:
          $ref: '#/components/responses/401-Unauthorized'
        403:
          $ref: '#/components/responses/403-Forbidden'
    delete:
      summary: Delete all recipes from the system
      operationId: deleteRecipes
      tags:
        - Recipes
      security:
        - basicAuth:[]
      responses:
        204:
          description: All recipes have been deleted from the system. Only a super administrator can delete all recipes directly
        401:
          $ref: '#/components/responses/401-Unauthorized'
        403:
          $ref: '#/components/responses/403-Forbidden'
  /recipes/{recipeId}:
    get:
      summary: Get a recipe detail. Recipe detail is accessible for every user, either authenticated or not
      operationId: retrieveRecipe
      tags:
        - Recipes
      parameters:
        - $ref: '#/components/parameters/recipeId'
      responses:
        200:
          $ref: '#/components/responses/Recipe'
        404:
          $ref: '#/components/responses/404-NotFound'
    delete:
      summary: Delete a recipe from the system. Only the recipe author or a super administrator can delete a recipe
      operationId: deleteRecipe
      tags:
        - Recipes
      security:
        - basicAuth:[]
      parameters:
        - $ref: '#/components/parameters/recipeId'
      responses:
        204:
          description: The recipe has been deleted from the system
        401:
          $ref: '#/components/responses/401-Unauthorized'
        403:
          $ref: '#/components/responses/403-Forbidden'
        404:
          $ref: '#/components/responses/404-NotFound'
  /recipes/{recipeId}/ingredients:
    get:
      summary: Get the recipe's related ingredients collection. Recipe's ingredients collection is accessible for every user, either authenticated or not
      operationId: listRecipeIngredients
      tags:
        - Recipe Ingredients
      parameters:
        - $ref: '#/components/parameters/recipeId'
      responses:
        200:
          $ref: '#/components/responses/RecipeIngredients'
        404:
          $ref: '#/components/responses/404-NotFound'
    post:
      summary: Add an ingredient to a recipe's related ingredients collection. Only the recipe author or a super administrator can add an ingredient to a recipe
      operationId: addIngredientToRecipe
      tags:
        - Recipe Ingredients
      security:
        - basicAuth:[]
      parameters:
        - $ref: '#/components/parameters/recipeId'
      requestBody:
        $ref: '#/components/requestBodies/AddIngredientToRecipe'
      responses:
        201:
          $ref: '#/components/responses/IngredientAddedToRecipe'
        400:
          $ref: '#/components/responses/400-BadRequest'
        401:
          $ref: '#/components/responses/401-Unauthorized'
        403:
          $ref: '#/components/responses/403-Forbidden'
    delete:
      summary: Remove all recipe's related ingredients. Only the recipe author or a super administrator can delete all recipe's ingredients directly
      operationId: deleteRecipeIngredients
      tags:
        - Recipes
      security:
        - basicAuth:[]
      parameters:
        - $ref: '#/components/parameters/recipeId'
      responses:
        204:
          description: All recipe's related ingredients have been removed
        401:
          $ref: '#/components/responses/401-Unauthorized'
        403:
          $ref: '#/components/responses/403-Forbidden'
  /recipes/{recipeId}/ingredients/{ingredientId}:
    get:
      summary: Get the details of an ingredient related to the recipe. Ingredient detail is accessible for every user, either authenticated or not
      operationId: retrieveRecipeIngredient
      tags:
        - Recipes
      parameters:
        - $ref: '#/components/parameters/recipeId'
        - $ref: '#/components/parameters/ingredientId'
      responses:
        200:
          $ref: '#/components/responses/RecipeIngredient'
        404:
          $ref: '#/components/responses/404-NotFound'
    delete:
      summary: Remove an ingredient from a recipe's related ingredients collection. Only the recipe author or a super administrator can remove ingredients from recipes
      operationId: removeIngredientFromRecipe
      tags:
        - Recipes
      security:
        - basicAuth:[]
      parameters:
        - $ref: '#/components/parameters/recipeId'
        - $ref: '#/components/parameters/ingredientId'
      responses:
        204:
          description: The ingredient has been removed from recipe's ingredients
        401:
          $ref: '#/components/responses/401-Unauthorized'
        403:
          $ref: '#/components/responses/403-Forbidden'
        404:
          $ref: '#/components/responses/404-NotFound'
  /menus:
    get:
      summary: Get the menus collection for the currently authenticated user
      operationId: listMenus
      tags:
        - Menus
      security:
        - basicAuth:[]
      responses:
        200:
          $ref: '#/components/responses/Menus'
    post:
      summary: Create a menu in menus collection for the currently authenticated user
      operationId: createMenu
      tags:
        - Menus
      security:
        - basicAuth:[]
      requestBody:
        $ref: '#/components/requestBodies/CreateMenu'
      responses:
        201:
          $ref: '#/components/responses/MenuCreated'
        400:
          $ref: '#/components/responses/400-BadRequest'
        401:
          $ref: '#/components/responses/401-Unauthorized'
  /menus/{menuId}:
    get:
      summary: >
        Get a menu detail. Menu detail depends on the authenticated user. The same menu identity for 2 different authenticated
        users will provide 2 different resources, exclusive for the authenticated user
      operationId: retrieveMenu
      tags:
        - Menus
      security:
        - basicAuth:[]
      parameters:
        - $ref: '#/components/parameters/menuId'
      responses:
        200:
          $ref: '#/components/responses/Menu'
        404:
          $ref: '#/components/responses/404-NotFound'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    ingredientId:
      name: ingredientId
      in: path
      description: Ingredient identity
      required: true
      schema:
        $ref: '#/components/schemas/IngredientId'
    recipeId:
      name: recipeId
      in: path
      description: Recipe identity
      required: true
      schema:
        $ref: '#/components/schemas/RecipeId'
    menuId:
      name: menuId
      in: path
      description: Menu identity
      required: true
      schema:
        $ref: '#/components/schemas/MenuId'
  requestBodies:
    CreateIngredient:
      required: true
      description: Ingredient creation request
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Ingredient'
        application/json:
          schema:
            $ref: '#/components/schemas/Ingredient'
    CreateRecipe:
      required: true
      description: Recipe creation request
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/CreateRecipe'
        application/json:
          schema:
            $ref: '#/components/schemas/CreateRecipe'
    AddIngredientToRecipe:
      required: true
      description: Ingredient addition to recipe's ingredients collection
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/AddIngredientToRecipe'
        application/json:
          schema:
            $ref: '#/components/schemas/AddIngredientToRecipe'
    CreateMenu:
      required: true
      description: Menu creation request
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Menu'
        application/json:
          schema:
            $ref: '#/components/schemas/Menu'
  responses:
    Index:
      description: Retrieve links to main API resources
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Index'
        application/json:
          schema:
            $ref: '#/components/schemas/Index'
    Ingredients:
      description: Collection containing all the ingredients found in the system. For now, this collection is not sortable nor pageable, but those behaviors may be implemented in the future.
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Ingredients'
        application/json:
          schema:
            $ref: '#/components/schemas/Ingredients'
    IngredientCreated:
      description: Successful ingredient creation response
      headers:
        Location:
          description: Link to the created ingredient. Can be used to retrieve, update or delete the created ingredient
          schema:
            type: string
            example: 'https://cena.adhuc.org/api/ingredients/3fa85f64-5717-4562-b3fc-2c963f66afa6'
    Ingredient:
      description: Ingredient detail
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Ingredient'
        application/json:
          schema:
            $ref: '#/components/schemas/Ingredient'
    Recipes:
      description: Collection containing all the recipes found in the system. For now, this collection is not sortable nor pageable, but those behaviors may be implemented in the future.
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Recipes'
        application/json:
          schema:
            $ref: '#/components/schemas/Recipes'
    RecipeCreated:
      description: Successful recipe creation response
      headers:
        Location:
          description: Link to the created recipe. Can be used to retrieve, update or delete the created recipe
          schema:
            type: string
            example: 'https://cena.adhuc.org/api/recipes/d71e2fc7-09e3-4241-97a5-dc3383d35e98'
    Recipe:
      description: Recipe detail
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Recipe'
        application/json:
          schema:
            $ref: '#/components/schemas/Recipe'
    RecipeIngredients:
      description: Collection containing all the ingredients related to a recipe. For now, this collection is not sortable nor pageable, but those behaviors may be implemented in the future.
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/RecipeIngredients'
        application/json:
          schema:
            $ref: '#/components/schemas/RecipeIngredients'
    IngredientAddedToRecipe:
      description: Successful ingredient addition to recipe's ingredients collection response
      headers:
        Location:
          description: Link to the created recipe ingredient. Can be used to retrieve, update or delete the recipe ingredient
          schema:
            type: string
            example: 'https://cena.adhuc.org/api/recipes/d71e2fc7-09e3-4241-97a5-dc3383d35e98/ingredients/3fa85f64-5717-4562-b3fc-2c963f66afa6'
    RecipeIngredient:
      description: Recipe ingredient detail
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/RecipeIngredient'
        application/json:
          schema:
            $ref: '#/components/schemas/RecipeIngredient'
    Menus:
      description: Collection containing all the menus for the currently authenticated user. For now, this collection is not sortable nor pageable, but those behaviors may be implemented in the future.
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Menus'
        application/json:
          schema:
            $ref: '#/components/schemas/Menus'
    MenuCreated:
      description: Successful menu creation response
      headers:
        Location:
          description: Link to the created menu. Can be used to retrieve, update or delete the created menu
          schema:
            type: string
            example: 'https://cena.adhuc.org/api/menus/07549d0c-b8ef-40a0-af3b-5b6107706175'
    Menu:
      description: Menu detail
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Menu'
        application/json:
          schema:
            $ref: '#/components/schemas/Menu'
    400-BadRequest:
      description: Bad syntax or incorrect request
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Error'
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    401-Unauthorized:
      description: An authentication is required
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Error'
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    403-Forbidden:
      description: Authenticated user does not have access to resource
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Error'
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    404-NotFound:
      description: Resource does not exist
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Error'
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Index:
      description: Index resource, containing links to main resources
      type: object
      required:
        - '_links'
      properties:
        '_links':
          type: object
          readOnly: true
          required:
            - openapi
            - ingredients
            - recipes
          properties:
            documentation:
              description: Link to access to the API documentation
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/docs/api-guide.html'
            openapi:
              description: This OpenAPI specification
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/docs/openapi.yml'
            management:
              description: Link to access to the management API associated to this API
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/management'
            ingredients:
              description: Link to access to the ingredients collection resource
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/ingredients'
            recipes:
              description: Link to access to the recipes collection resource
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/recipes'
            menus:
              description: >
                Link to access to the menus collection resource for the currently authenticated user.
                This link is present only for authenticated users.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/menus'
    Ingredients:
      description: A collection of ingredients, containing ingredients detail for each ingredient
      type: object
      required:
        - '_links'
      properties:
        '_embedded':
          type: object
          readOnly: true
          required:
            - data
          properties:
            data:
              description: The ingredients collection data, containing ingredients detail
              type: array
              items:
                $ref: '#/components/schemas/Ingredient'
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              description: Link to this ingredients collection. Can be used to create new ingredients in the collection
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/ingredients'
    Ingredient:
      description: An ingredient detail, containing its identity, name and measurement types
      type: object
      required:
        - id
        - name
        - '_links'
      properties:
        id:
          description: Ingredient identity
          type: string
          format: uuid
          readOnly: true
          example: '3fa85f64-5717-4562-b3fc-2c963f66afa6'
        name:
          description: Ingredient name, unique in the system
          type: string
          minLength: 1
          example: 'Tomato'
        measurementTypes:
          description: Ingredient measurement types, used to determine which units of measurements ingredients accept when associated to recipes
          type: array
          items:
            type: string
            enum:
              - WEIGHT
              - VOLUME
              - COUNT
              - AT_CONVENIENCE
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              description: Link to this ingredient detail. Can be used to update or delete the ingredient
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/ingredients/3fa85f64-5717-4562-b3fc-2c963f66afa6'
      additionalProperties: true
    IngredientId:
      description: Ingredient identity
      type: string
      format: uuid
      example: '3fa85f64-5717-4562-b3fc-2c963f66afa6'
    Recipes:
      description: A collection of recipes, containing recipes detail for each recipe
      type: object
      required:
        - '_links'
      properties:
        '_embedded':
          type: object
          readOnly: true
          required:
            - data
          properties:
            data:
              description: The recipes collection data, containing recipes detail
              type: array
              items:
                $ref: '#/components/schemas/Recipe'
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              description: Link to this recipes collection. Can be used to create new recipes in the collection
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/recipes'
    Recipe:
      description: A recipe detail
      type: object
      required:
        - id
        - name
        - content
        - servings
        - '_links'
      properties:
        id:
          description: Recipe identity
          type: string
          format: uuid
          readOnly: true
          example: 'd71e2fc7-09e3-4241-97a5-dc3383d35e98'
        name:
          $ref: '#/components/schemas/RecipeName'
        content:
          $ref: '#/components/schemas/RecipeContent'
        servings:
          $ref: '#/components/schemas/Servings'
        '_links':
          type: object
          readOnly: true
          required:
            - self
            - ingredients
          properties:
            self:
              description: Link to this recipe detail. Can be used to update or delete the recipe
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/recipes/d71e2fc7-09e3-4241-97a5-dc3383d35e98'
            ingredients:
              description: Link to this recipe's related ingredients collection
              type: object
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/recipes/d71e2fc7-09e3-4241-97a5-dc3383d35e98/ingredients'
      additionalProperties: true
    CreateRecipe:
      type: object
      required:
        - name
        - content
      properties:
        name:
          $ref: '#/components/schemas/RecipeName'
        content:
          $ref: '#/components/schemas/RecipeContent'
        servings:
          $ref: '#/components/schemas/Servings'
      additionalProperties: true
    RecipeId:
      description: Recipe identity
      type: string
      format: uuid
      example: 'd71e2fc7-09e3-4241-97a5-dc3383d35e98'
    RecipeName:
      description: Recipe name
      type: string
      minLength: 1
      example: 'Tomato, cucumber and mozzarella salad'
    RecipeContent:
      description: Recipe content
      type: string
      minLength: 1
      example: 'Cut everything into dices, mix it, dress it'
    Servings:
      description: Number of servings for a recipe
      type: integer
      example: 2
      minimum: 1
    RecipeIngredients:
      description: A collection of ingredients linked to a recipe, containing ingredients detail for each ingredient
      type: object
      required:
        - '_links'
      properties:
        '_embedded':
          type: object
          readOnly: true
          required:
            - data
            - ingredients
          properties:
            data:
              description: The recipe's ingredients collection data, containing recipe ingredients detail
              type: array
              items:
                $ref: '#/components/schemas/RecipeIngredient'
            ingredients:
              description: The related ingredients collection, containing ingredients detail
              type: array
              items:
                $ref: '#/components/schemas/Ingredient'
        '_links':
          type: object
          readOnly: true
          required:
            - self
            - recipe
          properties:
            self:
              description: Link to this recipe's ingredients collection
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/recipes/d71e2fc7-09e3-4241-97a5-dc3383d35e98/ingredients'
            recipe:
              description: Link to the recipe
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/recipes/d71e2fc7-09e3-4241-97a5-dc3383d35e98'
    RecipeIngredient:
      description: A recipe ingredient detail, containing its identity and attributes
      type: object
      required:
        - id
        - mainIngredient
        - '_links'
      properties:
        id:
          description: Recipe ingredient identity. Corresponds to the identity of the related ingredient
          type: string
          format: uuid
          readOnly: true
          example: '3fa85f64-5717-4562-b3fc-2c963f66afa6'
        mainIngredient:
          type: boolean
        quantity:
          $ref: '#/components/schemas/Quantity'
        measurementUnit:
          $ref: '#/components/schemas/MeasurementUnit'
        '_links':
          type: object
          readOnly: true
          required:
            - self
            - recipe
            - ingredient
          properties:
            self:
              description: Link to this recicpe ingredient detail. Can be used to update or delete the recipe ingredient
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/recipes/d71e2fc7-09e3-4241-97a5-dc3383d35e98/ingredients/3fa85f64-5717-4562-b3fc-2c963f66afa6'
            recipe:
              description: Link to the recipe
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/recipes/d71e2fc7-09e3-4241-97a5-dc3383d35e98'
            ingredient:
              description: Link to the ingredient
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/ingredients/3fa85f64-5717-4562-b3fc-2c963f66afa6'
      additionalProperties: true
    AddIngredientToRecipe:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/RecipeIngredientId'
        mainIngredient:
          type: boolean
          default: false
        quantity:
          $ref: '#/components/schemas/Quantity'
        measurementUnit:
          $ref: '#/components/schemas/MeasurementUnit'
      additionalProperties: true
    RecipeIngredientId:
      description: Recipe ingredient identity. Corresponds to the identity of the related ingredient
      type: string
      format: uuid
      example: '3fa85f64-5717-4562-b3fc-2c963f66afa6'
    Quantity:
      description: Quantity of ingredient in a recipe
      type: integer
      example: 4
      minimum: 1
    MeasurementUnit:
      description: Unit of measurement for a quantity of ingredient in a recipe. Depends on the measurement types defined for the ingredient
      type: string
      enum: ['LITER', 'CENTILITER', 'MILLILITER', 'TABLESPOON', 'TEASPOON', 'GRAM', 'KILOGRAM', 'POUND', 'UNIT', 'TEN', 'DOZEN', 'PINCH']
    Menus:
      description: A collection of menus, containing menu detail for each menu
      type: object
      required:
        - '_links'
      properties:
        '_embedded':
          type: object
          readOnly: true
          required:
            - data
          properties:
            data:
              description: The menus collection data, containing menu detail for each menu
              type: array
              items:
                $ref: '#/components/schemas/Menu'
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              description: Link to this menus collection. Can be used to create new menus in the collection
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/menus'
    Menu:
      description: A menu detail
      type: object
      required:
        - date
        - mealType
        - covers
        - mainCourseRecipes
        - '_links'
      properties:
        date:
          description: Menu date
          type: string
          format: date
          example: '2020-01-01'
        mealType:
          $ref: '#/components/schemas/MealType'
        covers:
          description: Number of covers of a menu
          type: integer
          example: 2
          minimum: 1
        mainCourseRecipes:
          description: List of recipe identities related to menu's main course. Main course must consist of at least one recipe
          type: array
          items:
            $ref: '#/components/schemas/RecipeId'
          minItems: 1
        '_links':
          type: object
          readOnly: true
          required:
            - self
            - mainCourseRecipes
          properties:
            self:
              description: Link to this menu detail. Can be used to update or delete the menu
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://cena.adhuc.org/api/menus/2020-01-01_LUNCH'
            mainCourseRecipes:
              description: Links to this menu's main course recipes
              type: array
              items:
                type: object
                required:
                  - href
                properties:
                  href:
                    type: string
                    example: 'https://cena.adhuc.org/api/recipes/d71e2fc7-09e3-4241-97a5-dc3383d35e98'
      additionalProperties: true
    MenuId:
      description: Menu identity
      type: string
      example: '2020-01-01-LUNCH'
    MealType:
      description: Meal type for a menu
      type: string
      enum: ['LUNCH', 'DINER']
    Error:
      description: General error structure
      type: object
      properties:
        timestamp:
          description: The date this error occurred on the server
          type: string
          format: date-time
        status:
          description: The HTTP status code applicable to this error
          type: number
          example: 400
        error:
          description: A human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the error
          type: string
          example: Bad request
        message:
          description: A human-readable explanation specific to this occurrence of the error
          type: string
          example: Ingredient name 'Tomato' is already used
        path:
          description: The path used to access to the resource returning the error
          type: string
          example: '/api/ingredients'
        code:
          description: An application-specific error code
          type: number
          example: 900100
